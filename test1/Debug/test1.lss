
test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000cf8  00000d8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800066  00800066  00000d92  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00000d92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000df4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00000e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020d6  00000000  00000000  00001050  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d0b  00000000  00000000  00003126  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea5  00000000  00000000  00003e31  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  00004cd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d6  00000000  00000000  00005084  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d1b  00000000  00000000  0000585a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00006575  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 61 03 	jmp	0x6c2	; 0x6c2 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ef       	ldi	r30, 0xF8	; 248
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 37       	cpi	r26, 0x7A	; 122
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 82 02 	call	0x504	; 0x504 <main>
  8a:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_voidSetPinDir>:
  92:	81 11       	cpse	r24, r1
  94:	1b c0       	rjmp	.+54     	; 0xcc <DIO_voidSetPinDir+0x3a>
  96:	41 30       	cpi	r20, 0x01	; 1
  98:	59 f4       	brne	.+22     	; 0xb0 <DIO_voidSetPinDir+0x1e>
  9a:	2a b3       	in	r18, 0x1a	; 26
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <DIO_voidSetPinDir+0x14>
  a2:	88 0f       	add	r24, r24
  a4:	99 1f       	adc	r25, r25
  a6:	6a 95       	dec	r22
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <DIO_voidSetPinDir+0x10>
  aa:	82 2b       	or	r24, r18
  ac:	8a bb       	out	0x1a, r24	; 26
  ae:	08 95       	ret
  b0:	41 11       	cpse	r20, r1
  b2:	62 c0       	rjmp	.+196    	; 0x178 <DIO_voidSetPinDir+0xe6>
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_voidSetPinDir+0x2e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_voidSetPinDir+0x2a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	d9 f4       	brne	.+54     	; 0x106 <DIO_voidSetPinDir+0x74>
  d0:	41 30       	cpi	r20, 0x01	; 1
  d2:	59 f4       	brne	.+22     	; 0xea <DIO_voidSetPinDir+0x58>
  d4:	27 b3       	in	r18, 0x17	; 23
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <DIO_voidSetPinDir+0x4e>
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	6a 95       	dec	r22
  e2:	e2 f7       	brpl	.-8      	; 0xdc <DIO_voidSetPinDir+0x4a>
  e4:	82 2b       	or	r24, r18
  e6:	87 bb       	out	0x17, r24	; 23
  e8:	08 95       	ret
  ea:	41 11       	cpse	r20, r1
  ec:	45 c0       	rjmp	.+138    	; 0x178 <DIO_voidSetPinDir+0xe6>
  ee:	27 b3       	in	r18, 0x17	; 23
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPinDir+0x68>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPinDir+0x64>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	87 bb       	out	0x17, r24	; 23
 104:	08 95       	ret
 106:	82 30       	cpi	r24, 0x02	; 2
 108:	d9 f4       	brne	.+54     	; 0x140 <DIO_voidSetPinDir+0xae>
 10a:	41 30       	cpi	r20, 0x01	; 1
 10c:	59 f4       	brne	.+22     	; 0x124 <DIO_voidSetPinDir+0x92>
 10e:	24 b3       	in	r18, 0x14	; 20
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_voidSetPinDir+0x88>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_voidSetPinDir+0x84>
 11e:	82 2b       	or	r24, r18
 120:	84 bb       	out	0x14, r24	; 20
 122:	08 95       	ret
 124:	41 11       	cpse	r20, r1
 126:	28 c0       	rjmp	.+80     	; 0x178 <DIO_voidSetPinDir+0xe6>
 128:	24 b3       	in	r18, 0x14	; 20
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <DIO_voidSetPinDir+0xa2>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <DIO_voidSetPinDir+0x9e>
 138:	80 95       	com	r24
 13a:	82 23       	and	r24, r18
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	08 95       	ret
 140:	83 30       	cpi	r24, 0x03	; 3
 142:	d1 f4       	brne	.+52     	; 0x178 <DIO_voidSetPinDir+0xe6>
 144:	41 30       	cpi	r20, 0x01	; 1
 146:	59 f4       	brne	.+22     	; 0x15e <DIO_voidSetPinDir+0xcc>
 148:	21 b3       	in	r18, 0x11	; 17
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_voidSetPinDir+0xc2>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_voidSetPinDir+0xbe>
 158:	82 2b       	or	r24, r18
 15a:	81 bb       	out	0x11, r24	; 17
 15c:	08 95       	ret
 15e:	41 11       	cpse	r20, r1
 160:	0b c0       	rjmp	.+22     	; 0x178 <DIO_voidSetPinDir+0xe6>
 162:	21 b3       	in	r18, 0x11	; 17
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_voidSetPinDir+0xdc>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	6a 95       	dec	r22
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_voidSetPinDir+0xd8>
 172:	80 95       	com	r24
 174:	82 23       	and	r24, r18
 176:	81 bb       	out	0x11, r24	; 17
 178:	08 95       	ret

0000017a <DIO_voidSetPinValue>:
 17a:	81 11       	cpse	r24, r1
 17c:	1b c0       	rjmp	.+54     	; 0x1b4 <DIO_voidSetPinValue+0x3a>
 17e:	41 30       	cpi	r20, 0x01	; 1
 180:	59 f4       	brne	.+22     	; 0x198 <DIO_voidSetPinValue+0x1e>
 182:	2b b3       	in	r18, 0x1b	; 27
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidSetPinValue+0x14>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidSetPinValue+0x10>
 192:	82 2b       	or	r24, r18
 194:	8b bb       	out	0x1b, r24	; 27
 196:	08 95       	ret
 198:	41 11       	cpse	r20, r1
 19a:	62 c0       	rjmp	.+196    	; 0x260 <DIO_voidSetPinValue+0xe6>
 19c:	2b b3       	in	r18, 0x1b	; 27
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_voidSetPinValue+0x2e>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_voidSetPinValue+0x2a>
 1ac:	80 95       	com	r24
 1ae:	82 23       	and	r24, r18
 1b0:	8b bb       	out	0x1b, r24	; 27
 1b2:	08 95       	ret
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	d9 f4       	brne	.+54     	; 0x1ee <DIO_voidSetPinValue+0x74>
 1b8:	41 30       	cpi	r20, 0x01	; 1
 1ba:	59 f4       	brne	.+22     	; 0x1d2 <DIO_voidSetPinValue+0x58>
 1bc:	28 b3       	in	r18, 0x18	; 24
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_voidSetPinValue+0x4e>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_voidSetPinValue+0x4a>
 1cc:	82 2b       	or	r24, r18
 1ce:	88 bb       	out	0x18, r24	; 24
 1d0:	08 95       	ret
 1d2:	41 11       	cpse	r20, r1
 1d4:	45 c0       	rjmp	.+138    	; 0x260 <DIO_voidSetPinValue+0xe6>
 1d6:	28 b3       	in	r18, 0x18	; 24
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_voidSetPinValue+0x68>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_voidSetPinValue+0x64>
 1e6:	80 95       	com	r24
 1e8:	82 23       	and	r24, r18
 1ea:	88 bb       	out	0x18, r24	; 24
 1ec:	08 95       	ret
 1ee:	82 30       	cpi	r24, 0x02	; 2
 1f0:	d9 f4       	brne	.+54     	; 0x228 <DIO_voidSetPinValue+0xae>
 1f2:	41 30       	cpi	r20, 0x01	; 1
 1f4:	59 f4       	brne	.+22     	; 0x20c <DIO_voidSetPinValue+0x92>
 1f6:	25 b3       	in	r18, 0x15	; 21
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_voidSetPinValue+0x88>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_voidSetPinValue+0x84>
 206:	82 2b       	or	r24, r18
 208:	85 bb       	out	0x15, r24	; 21
 20a:	08 95       	ret
 20c:	41 11       	cpse	r20, r1
 20e:	28 c0       	rjmp	.+80     	; 0x260 <DIO_voidSetPinValue+0xe6>
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_voidSetPinValue+0xa2>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_voidSetPinValue+0x9e>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	85 bb       	out	0x15, r24	; 21
 226:	08 95       	ret
 228:	83 30       	cpi	r24, 0x03	; 3
 22a:	d1 f4       	brne	.+52     	; 0x260 <DIO_voidSetPinValue+0xe6>
 22c:	41 30       	cpi	r20, 0x01	; 1
 22e:	59 f4       	brne	.+22     	; 0x246 <DIO_voidSetPinValue+0xcc>
 230:	22 b3       	in	r18, 0x12	; 18
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_voidSetPinValue+0xc2>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_voidSetPinValue+0xbe>
 240:	82 2b       	or	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret
 246:	41 11       	cpse	r20, r1
 248:	0b c0       	rjmp	.+22     	; 0x260 <DIO_voidSetPinValue+0xe6>
 24a:	22 b3       	in	r18, 0x12	; 18
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_voidSetPinValue+0xdc>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_voidSetPinValue+0xd8>
 25a:	80 95       	com	r24
 25c:	82 23       	and	r24, r18
 25e:	82 bb       	out	0x12, r24	; 18
 260:	08 95       	ret

00000262 <DIO_voidSetPortValue>:
 262:	81 11       	cpse	r24, r1
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_voidSetPortValue+0x8>
 266:	6b bb       	out	0x1b, r22	; 27
 268:	08 95       	ret
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	11 f4       	brne	.+4      	; 0x272 <DIO_voidSetPortValue+0x10>
 26e:	68 bb       	out	0x18, r22	; 24
 270:	08 95       	ret
 272:	82 30       	cpi	r24, 0x02	; 2
 274:	11 f4       	brne	.+4      	; 0x27a <DIO_voidSetPortValue+0x18>
 276:	65 bb       	out	0x15, r22	; 21
 278:	08 95       	ret
 27a:	83 30       	cpi	r24, 0x03	; 3
 27c:	09 f4       	brne	.+2      	; 0x280 <DIO_voidSetPortValue+0x1e>
 27e:	62 bb       	out	0x12, r22	; 18
 280:	08 95       	ret

00000282 <EXTI0_voidEnable>:
 282:	8b b7       	in	r24, 0x3b	; 59
 284:	80 64       	ori	r24, 0x40	; 64
 286:	8b bf       	out	0x3b, r24	; 59
 288:	08 95       	ret

0000028a <EXTI0_voidDisable>:
 28a:	8b b7       	in	r24, 0x3b	; 59
 28c:	8f 7b       	andi	r24, 0xBF	; 191
 28e:	8b bf       	out	0x3b, r24	; 59
 290:	08 95       	ret

00000292 <EXTI0_voidClearFlag>:
 292:	8a b7       	in	r24, 0x3a	; 58
 294:	80 64       	ori	r24, 0x40	; 64
 296:	8a bf       	out	0x3a, r24	; 58
 298:	08 95       	ret

0000029a <EXTI0_voidInit>:
 29a:	85 b7       	in	r24, 0x35	; 53
 29c:	81 60       	ori	r24, 0x01	; 1
 29e:	85 bf       	out	0x35, r24	; 53
 2a0:	85 b7       	in	r24, 0x35	; 53
 2a2:	8d 7f       	andi	r24, 0xFD	; 253
 2a4:	85 bf       	out	0x35, r24	; 53
 2a6:	0e 94 45 01 	call	0x28a	; 0x28a <EXTI0_voidDisable>
 2aa:	0e 94 5e 01 	call	0x2bc	; 0x2bc <GIE_voidDisable>
 2ae:	0e 94 49 01 	call	0x292	; 0x292 <EXTI0_voidClearFlag>
 2b2:	08 95       	ret

000002b4 <GIE_voidEnable>:
 2b4:	8f b7       	in	r24, 0x3f	; 63
 2b6:	80 68       	ori	r24, 0x80	; 128
 2b8:	8f bf       	out	0x3f, r24	; 63
 2ba:	08 95       	ret

000002bc <GIE_voidDisable>:
 2bc:	8f b7       	in	r24, 0x3f	; 63
 2be:	8f 77       	andi	r24, 0x7F	; 127
 2c0:	8f bf       	out	0x3f, r24	; 63
 2c2:	08 95       	ret

000002c4 <LCD_voidSendChar>:
	_delay_ms(2);
	LCD_voidSendCommand(0x01);
	_delay_ms(2);
}
void LCD_voidSendChar(u8 LCD_u8_Data)
{
 2c4:	cf 93       	push	r28
 2c6:	c8 2f       	mov	r28, r24
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_RS ,DIO_U8_HIGH);
 2c8:	41 e0       	ldi	r20, 0x01	; 1
 2ca:	61 e0       	ldi	r22, 0x01	; 1
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_RW ,DIO_U8_LOW);
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	62 e0       	ldi	r22, 0x02	; 2
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	
	DIO_voidSetPortValue(LCD_U8_DATA_PORT , LCD_u8_Data);
 2dc:	6c 2f       	mov	r22, r28
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPortValue>
	
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_HIGH);
 2e4:	41 e0       	ldi	r20, 0x01	; 1
 2e6:	63 e0       	ldi	r22, 0x03	; 3
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ee:	8f e9       	ldi	r24, 0x9F	; 159
 2f0:	9f e0       	ldi	r25, 0x0F	; 15
 2f2:	01 97       	sbiw	r24, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <LCD_voidSendChar+0x2e>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <LCD_voidSendChar+0x34>
 2f8:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_LOW);
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	63 e0       	ldi	r22, 0x03	; 3
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 304:	8f e9       	ldi	r24, 0x9F	; 159
 306:	9f e0       	ldi	r25, 0x0F	; 15
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <LCD_voidSendChar+0x44>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <LCD_voidSendChar+0x4a>
 30e:	00 00       	nop
	_delay_ms(1);
	
	DIO_voidSetPortValue(LCD_U8_DATA_PORT , LCD_u8_Data << 4);
 310:	6c 2f       	mov	r22, r28
 312:	62 95       	swap	r22
 314:	60 7f       	andi	r22, 0xF0	; 240
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPortValue>
	
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_HIGH);
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	63 e0       	ldi	r22, 0x03	; 3
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 326:	8f e9       	ldi	r24, 0x9F	; 159
 328:	9f e0       	ldi	r25, 0x0F	; 15
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <LCD_voidSendChar+0x66>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <LCD_voidSendChar+0x6c>
 330:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_LOW);
 332:	40 e0       	ldi	r20, 0x00	; 0
 334:	63 e0       	ldi	r22, 0x03	; 3
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 33c:	8f e9       	ldi	r24, 0x9F	; 159
 33e:	9f e0       	ldi	r25, 0x0F	; 15
 340:	01 97       	sbiw	r24, 0x01	; 1
 342:	f1 f7       	brne	.-4      	; 0x340 <LCD_voidSendChar+0x7c>
 344:	00 c0       	rjmp	.+0      	; 0x346 <LCD_voidSendChar+0x82>
 346:	00 00       	nop
	_delay_ms(1);
}
 348:	cf 91       	pop	r28
 34a:	08 95       	ret

0000034c <LCD_voidSendCommand>:

void LCD_voidSendCommand(u8 LCD_u8_Command)
{
 34c:	cf 93       	push	r28
 34e:	c8 2f       	mov	r28, r24
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_RS ,DIO_U8_LOW);
 350:	40 e0       	ldi	r20, 0x00	; 0
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_RW ,DIO_U8_LOW);
 35a:	40 e0       	ldi	r20, 0x00	; 0
 35c:	62 e0       	ldi	r22, 0x02	; 2
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	
	DIO_voidSetPortValue(LCD_U8_DATA_PORT , LCD_u8_Command);
 364:	6c 2f       	mov	r22, r28
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPortValue>
	
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_HIGH);
 36c:	41 e0       	ldi	r20, 0x01	; 1
 36e:	63 e0       	ldi	r22, 0x03	; 3
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 376:	8f e9       	ldi	r24, 0x9F	; 159
 378:	9f e0       	ldi	r25, 0x0F	; 15
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <LCD_voidSendCommand+0x2e>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <LCD_voidSendCommand+0x34>
 380:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_LOW);
 382:	40 e0       	ldi	r20, 0x00	; 0
 384:	63 e0       	ldi	r22, 0x03	; 3
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 38c:	8f e9       	ldi	r24, 0x9F	; 159
 38e:	9f e0       	ldi	r25, 0x0F	; 15
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <LCD_voidSendCommand+0x44>
 394:	00 c0       	rjmp	.+0      	; 0x396 <LCD_voidSendCommand+0x4a>
 396:	00 00       	nop
	_delay_ms(1);
	
	DIO_voidSetPortValue(LCD_U8_DATA_PORT , LCD_u8_Command << 4);
 398:	6c 2f       	mov	r22, r28
 39a:	62 95       	swap	r22
 39c:	60 7f       	andi	r22, 0xF0	; 240
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPortValue>
	
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_HIGH);
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	63 e0       	ldi	r22, 0x03	; 3
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 3ae:	8f e9       	ldi	r24, 0x9F	; 159
 3b0:	9f e0       	ldi	r25, 0x0F	; 15
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <LCD_voidSendCommand+0x66>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <LCD_voidSendCommand+0x6c>
 3b8:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_LOW);
 3ba:	40 e0       	ldi	r20, 0x00	; 0
 3bc:	63 e0       	ldi	r22, 0x03	; 3
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 3c4:	8f e9       	ldi	r24, 0x9F	; 159
 3c6:	9f e0       	ldi	r25, 0x0F	; 15
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <LCD_voidSendCommand+0x7c>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <LCD_voidSendCommand+0x82>
 3ce:	00 00       	nop
	_delay_ms(1);
}
 3d0:	cf 91       	pop	r28
 3d2:	08 95       	ret

000003d4 <LCD_voidInit>:
#include <util/delay.h>


void LCD_voidInit(void)
{
	DIO_voidSetPinDir(LCD_U8_DATA_PORT, DIO_U8_PIN4 ,DIO_U8_OUTPUT);
 3d4:	41 e0       	ldi	r20, 0x01	; 1
 3d6:	64 e0       	ldi	r22, 0x04	; 4
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(LCD_U8_DATA_PORT, DIO_U8_PIN5 ,DIO_U8_OUTPUT);
 3de:	41 e0       	ldi	r20, 0x01	; 1
 3e0:	65 e0       	ldi	r22, 0x05	; 5
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(LCD_U8_DATA_PORT, DIO_U8_PIN6 ,DIO_U8_OUTPUT);
 3e8:	41 e0       	ldi	r20, 0x01	; 1
 3ea:	66 e0       	ldi	r22, 0x06	; 6
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(LCD_U8_DATA_PORT, DIO_U8_PIN7 ,DIO_U8_OUTPUT);
 3f2:	41 e0       	ldi	r20, 0x01	; 1
 3f4:	67 e0       	ldi	r22, 0x07	; 7
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	
	DIO_voidSetPinDir(LCD_U8_CONTROL_PORT, LCD_U8_RS ,DIO_U8_OUTPUT);
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	61 e0       	ldi	r22, 0x01	; 1
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(LCD_U8_CONTROL_PORT, LCD_U8_RW ,DIO_U8_OUTPUT);
 406:	41 e0       	ldi	r20, 0x01	; 1
 408:	62 e0       	ldi	r22, 0x02	; 2
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_OUTPUT);
 410:	41 e0       	ldi	r20, 0x01	; 1
 412:	63 e0       	ldi	r22, 0x03	; 3
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
 41a:	2f e7       	ldi	r18, 0x7F	; 127
 41c:	85 eb       	ldi	r24, 0xB5	; 181
 41e:	91 e0       	ldi	r25, 0x01	; 1
 420:	21 50       	subi	r18, 0x01	; 1
 422:	80 40       	sbci	r24, 0x00	; 0
 424:	90 40       	sbci	r25, 0x00	; 0
 426:	e1 f7       	brne	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 428:	00 c0       	rjmp	.+0      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 42a:	00 00       	nop
	
	_delay_ms(35);
	LCD_voidSendCommand(0x33);
 42c:	83 e3       	ldi	r24, 0x33	; 51
 42e:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 432:	8f e3       	ldi	r24, 0x3F	; 63
 434:	9f e1       	ldi	r25, 0x1F	; 31
 436:	01 97       	sbiw	r24, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
	_delay_ms(2);
	LCD_voidSendCommand(0x32);
 43e:	82 e3       	ldi	r24, 0x32	; 50
 440:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 444:	8f e3       	ldi	r24, 0x3F	; 63
 446:	9f e1       	ldi	r25, 0x1F	; 31
 448:	01 97       	sbiw	r24, 0x01	; 1
 44a:	f1 f7       	brne	.-4      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44e:	00 00       	nop
	_delay_ms(2);
	LCD_voidSendCommand(0x28);
 450:	88 e2       	ldi	r24, 0x28	; 40
 452:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 456:	8f e3       	ldi	r24, 0x3F	; 63
 458:	9f e1       	ldi	r25, 0x1F	; 31
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 460:	00 00       	nop
	_delay_ms(2);
	LCD_voidSendCommand(0x0c);
 462:	8c e0       	ldi	r24, 0x0C	; 12
 464:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 468:	8f e3       	ldi	r24, 0x3F	; 63
 46a:	9f e1       	ldi	r25, 0x1F	; 31
 46c:	01 97       	sbiw	r24, 0x01	; 1
 46e:	f1 f7       	brne	.-4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
	_delay_ms(2);
	LCD_voidSendCommand(0x06);
 474:	86 e0       	ldi	r24, 0x06	; 6
 476:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 47a:	8f e3       	ldi	r24, 0x3F	; 63
 47c:	9f e1       	ldi	r25, 0x1F	; 31
 47e:	01 97       	sbiw	r24, 0x01	; 1
 480:	f1 f7       	brne	.-4      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 482:	00 c0       	rjmp	.+0      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 484:	00 00       	nop
	_delay_ms(2);
	LCD_voidSendCommand(0x01);
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
 48c:	8f e3       	ldi	r24, 0x3F	; 63
 48e:	9f e1       	ldi	r25, 0x1F	; 31
 490:	01 97       	sbiw	r24, 0x01	; 1
 492:	f1 f7       	brne	.-4      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 494:	00 c0       	rjmp	.+0      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 496:	00 00       	nop
 498:	08 95       	ret

0000049a <LCD_goto_xy>:
	DIO_voidSetPinValue(LCD_U8_CONTROL_PORT, LCD_U8_EN ,DIO_U8_LOW);
	_delay_ms(1);
}
void LCD_goto_xy (u8 line,u8 pos)				//line = 0 or 1
{
	LCD_voidSendCommand((0x80|(line<<6))+pos);
 49a:	20 e4       	ldi	r18, 0x40	; 64
 49c:	82 9f       	mul	r24, r18
 49e:	c0 01       	movw	r24, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	80 68       	ori	r24, 0x80	; 128
 4a4:	86 0f       	add	r24, r22
 4a6:	0e 94 a6 01 	call	0x34c	; 0x34c <LCD_voidSendCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4aa:	87 ec       	ldi	r24, 0xC7	; 199
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <LCD_goto_xy+0x14>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <LCD_goto_xy+0x1a>
 4b4:	00 00       	nop
 4b6:	08 95       	ret

000004b8 <LCD_Write_Word>:
	_delay_us (50);
}
void LCD_Write_Word(u16 word[20])
{
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	ec 01       	movw	r28, r24
	u16 i=0;
	while(word[i]!='\0')
 4be:	88 81       	ld	r24, Y
 4c0:	99 81       	ldd	r25, Y+1	; 0x01
 4c2:	00 97       	sbiw	r24, 0x00	; 0
 4c4:	39 f0       	breq	.+14     	; 0x4d4 <LCD_Write_Word+0x1c>
 4c6:	22 96       	adiw	r28, 0x02	; 2
	{
		LCD_voidSendChar(word[i]);
 4c8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <LCD_voidSendChar>
	_delay_us (50);
}
void LCD_Write_Word(u16 word[20])
{
	u16 i=0;
	while(word[i]!='\0')
 4cc:	89 91       	ld	r24, Y+
 4ce:	99 91       	ld	r25, Y+
 4d0:	00 97       	sbiw	r24, 0x00	; 0
 4d2:	d1 f7       	brne	.-12     	; 0x4c8 <LCD_Write_Word+0x10>
	{
		LCD_voidSendChar(word[i]);
		i++;
	}
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <ultra_trigger>:
	TIMER0_void_EnableOVInt();
}*/

// Trigger ultrasonic sensor
void ultra_trigger(void) {
	if (!sensor_working) {
 4da:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <sensor_working>
 4de:	81 11       	cpse	r24, r1
 4e0:	10 c0       	rjmp	.+32     	; 0x502 <ultra_trigger+0x28>
		DIO_voidSetPinValue(Trigger_port, Trigger_pin, DIO_U8_HIGH);
 4e2:	41 e0       	ldi	r20, 0x01	; 1
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	83 e0       	ldi	r24, 0x03	; 3
 4e8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 4ec:	80 e5       	ldi	r24, 0x50	; 80
 4ee:	8a 95       	dec	r24
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <ultra_trigger+0x14>
		_delay_us(15);
		DIO_voidSetPinValue(Trigger_port, Trigger_pin, DIO_U8_LOW);
 4f2:	40 e0       	ldi	r20, 0x00	; 0
 4f4:	60 e0       	ldi	r22, 0x00	; 0
 4f6:	83 e0       	ldi	r24, 0x03	; 3
 4f8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
		sensor_working = 1;
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <sensor_working>
 502:	08 95       	ret

00000504 <main>:

int main() {
	// Initialization
	u32 distance_right = 0;
	u32 distance_left = 0;
	Servo_init();
 504:	0e 94 aa 04 	call	0x954	; 0x954 <Servo_init>
	Motors_Init();
 508:	0e 94 1e 04 	call	0x83c	; 0x83c <Motors_Init>
	LCD_voidInit();
 50c:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <LCD_voidInit>
	ultrasonic_init();
 510:	0e 94 08 05 	call	0xa10	; 0xa10 <ultrasonic_init>
	GIE_voidEnable();
 514:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <GIE_voidEnable>
	ultra_trigger();
 518:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 51c:	2f ef       	ldi	r18, 0xFF	; 255
 51e:	81 ee       	ldi	r24, 0xE1	; 225
 520:	94 e0       	ldi	r25, 0x04	; 4
 522:	21 50       	subi	r18, 0x01	; 1
 524:	80 40       	sbci	r24, 0x00	; 0
 526:	90 40       	sbci	r25, 0x00	; 0
 528:	e1 f7       	brne	.-8      	; 0x522 <main+0x1e>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <main+0x28>
 52c:	00 00       	nop



			
		
			if (distance >= 51) {
 52e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 532:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 536:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 53a:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 53e:	c3 97       	sbiw	r24, 0x33	; 51
 540:	a1 05       	cpc	r26, r1
 542:	b1 05       	cpc	r27, r1
 544:	28 f0       	brcs	.+10     	; 0x550 <main+0x4c>
			Motors_TOP_Speed();
 546:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <Motors_TOP_Speed>
			Servo_90_Degree();	
 54a:	0e 94 a0 04 	call	0x940	; 0x940 <Servo_90_Degree>
 54e:	b0 c0       	rjmp	.+352    	; 0x6b0 <main+0x1ac>
			
			}
			
	
		else if (distance<=50) {
			Motors_Stop();
 550:	0e 94 47 04 	call	0x88e	; 0x88e <Motors_Stop>
			Servo_0_Degree();
 554:	0e 94 9b 04 	call	0x936	; 0x936 <Servo_0_Degree>
 558:	2f ef       	ldi	r18, 0xFF	; 255
 55a:	87 ea       	ldi	r24, 0xA7	; 167
 55c:	91 e6       	ldi	r25, 0x61	; 97
 55e:	21 50       	subi	r18, 0x01	; 1
 560:	80 40       	sbci	r24, 0x00	; 0
 562:	90 40       	sbci	r25, 0x00	; 0
 564:	e1 f7       	brne	.-8      	; 0x55e <main+0x5a>
 566:	00 c0       	rjmp	.+0      	; 0x568 <main+0x64>
 568:	00 00       	nop
			_delay_ms(2000);
			
			ultra_trigger();
 56a:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 56e:	8f e5       	ldi	r24, 0x5F	; 95
 570:	9a ee       	ldi	r25, 0xEA	; 234
 572:	01 97       	sbiw	r24, 0x01	; 1
 574:	f1 f7       	brne	.-4      	; 0x572 <main+0x6e>
 576:	00 c0       	rjmp	.+0      	; 0x578 <main+0x74>
 578:	00 00       	nop
			_delay_ms(15);
	
			distance_left=distance;
 57a:	c0 90 66 00 	lds	r12, 0x0066	; 0x800066 <__data_end>
 57e:	d0 90 67 00 	lds	r13, 0x0067	; 0x800067 <__data_end+0x1>
 582:	e0 90 68 00 	lds	r14, 0x0068	; 0x800068 <__data_end+0x2>
 586:	f0 90 69 00 	lds	r15, 0x0069	; 0x800069 <__data_end+0x3>
			
			Servo_180_Degree();
 58a:	0e 94 a5 04 	call	0x94a	; 0x94a <Servo_180_Degree>
 58e:	9f ef       	ldi	r25, 0xFF	; 255
 590:	27 ea       	ldi	r18, 0xA7	; 167
 592:	81 e6       	ldi	r24, 0x61	; 97
 594:	91 50       	subi	r25, 0x01	; 1
 596:	20 40       	sbci	r18, 0x00	; 0
 598:	80 40       	sbci	r24, 0x00	; 0
 59a:	e1 f7       	brne	.-8      	; 0x594 <main+0x90>
 59c:	00 c0       	rjmp	.+0      	; 0x59e <main+0x9a>
 59e:	00 00       	nop
			_delay_ms(2000);
			ultra_trigger();
 5a0:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 5a4:	8f e5       	ldi	r24, 0x5F	; 95
 5a6:	9a ee       	ldi	r25, 0xEA	; 234
 5a8:	01 97       	sbiw	r24, 0x01	; 1
 5aa:	f1 f7       	brne	.-4      	; 0x5a8 <main+0xa4>
 5ac:	00 c0       	rjmp	.+0      	; 0x5ae <main+0xaa>
 5ae:	00 00       	nop
			_delay_ms(15);
			
			distance_right=distance;
 5b0:	80 90 66 00 	lds	r8, 0x0066	; 0x800066 <__data_end>
 5b4:	90 90 67 00 	lds	r9, 0x0067	; 0x800067 <__data_end+0x1>
 5b8:	a0 90 68 00 	lds	r10, 0x0068	; 0x800068 <__data_end+0x2>
 5bc:	b0 90 69 00 	lds	r11, 0x0069	; 0x800069 <__data_end+0x3>
			
			if (distance_right > distance_left) {
 5c0:	c8 14       	cp	r12, r8
 5c2:	d9 04       	cpc	r13, r9
 5c4:	ea 04       	cpc	r14, r10
 5c6:	fb 04       	cpc	r15, r11
 5c8:	b8 f5       	brcc	.+110    	; 0x638 <main+0x134>
				Servo_90_Degree();
 5ca:	0e 94 a0 04 	call	0x940	; 0x940 <Servo_90_Degree>
 5ce:	9f ef       	ldi	r25, 0xFF	; 255
 5d0:	21 ee       	ldi	r18, 0xE1	; 225
 5d2:	84 e0       	ldi	r24, 0x04	; 4
 5d4:	91 50       	subi	r25, 0x01	; 1
 5d6:	20 40       	sbci	r18, 0x00	; 0
 5d8:	80 40       	sbci	r24, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <main+0xd0>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <main+0xda>
 5de:	00 00       	nop
				_delay_ms(100);
				ultra_trigger();
 5e0:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 5e4:	8f e5       	ldi	r24, 0x5F	; 95
 5e6:	9a ee       	ldi	r25, 0xEA	; 234
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	f1 f7       	brne	.-4      	; 0x5e8 <main+0xe4>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <main+0xea>
 5ee:	00 00       	nop
				_delay_ms(15);
				
				
				
				while (distance <= distance_right)
 5f0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 5f4:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 5f8:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 5fc:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 600:	88 16       	cp	r8, r24
 602:	99 06       	cpc	r9, r25
 604:	aa 06       	cpc	r10, r26
 606:	bb 06       	cpc	r11, r27
 608:	b8 f0       	brcs	.+46     	; 0x638 <main+0x134>
				 {
					Motors_Left();
 60a:	0e 94 71 04 	call	0x8e2	; 0x8e2 <Motors_Left>
					
					ultra_trigger();
 60e:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 612:	8f e5       	ldi	r24, 0x5F	; 95
 614:	9a ee       	ldi	r25, 0xEA	; 234
 616:	01 97       	sbiw	r24, 0x01	; 1
 618:	f1 f7       	brne	.-4      	; 0x616 <main+0x112>
 61a:	00 c0       	rjmp	.+0      	; 0x61c <main+0x118>
 61c:	00 00       	nop
				ultra_trigger();
				_delay_ms(15);
				
				
				
				while (distance <= distance_right)
 61e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 622:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 626:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 62a:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 62e:	88 16       	cp	r8, r24
 630:	99 06       	cpc	r9, r25
 632:	aa 06       	cpc	r10, r26
 634:	bb 06       	cpc	r11, r27
 636:	48 f7       	brcc	.-46     	; 0x60a <main+0x106>
					
				}
		
			} 
				
			if (distance_left>distance_right) {
 638:	8c 14       	cp	r8, r12
 63a:	9d 04       	cpc	r9, r13
 63c:	ae 04       	cpc	r10, r14
 63e:	bf 04       	cpc	r11, r15
 640:	b8 f5       	brcc	.+110    	; 0x6b0 <main+0x1ac>
					
					Servo_90_Degree();
 642:	0e 94 a0 04 	call	0x940	; 0x940 <Servo_90_Degree>
 646:	9f ef       	ldi	r25, 0xFF	; 255
 648:	21 ee       	ldi	r18, 0xE1	; 225
 64a:	84 e0       	ldi	r24, 0x04	; 4
 64c:	91 50       	subi	r25, 0x01	; 1
 64e:	20 40       	sbci	r18, 0x00	; 0
 650:	80 40       	sbci	r24, 0x00	; 0
 652:	e1 f7       	brne	.-8      	; 0x64c <main+0x148>
 654:	00 c0       	rjmp	.+0      	; 0x656 <main+0x152>
 656:	00 00       	nop
					_delay_ms(100);	 
					ultra_trigger();	 
 658:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 65c:	8f e5       	ldi	r24, 0x5F	; 95
 65e:	9a ee       	ldi	r25, 0xEA	; 234
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	f1 f7       	brne	.-4      	; 0x660 <main+0x15c>
 664:	00 c0       	rjmp	.+0      	; 0x666 <main+0x162>
 666:	00 00       	nop
					_delay_ms(15); 
					
					while (distance <= distance_left){
 668:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 66c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 670:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 674:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 678:	c8 16       	cp	r12, r24
 67a:	d9 06       	cpc	r13, r25
 67c:	ea 06       	cpc	r14, r26
 67e:	fb 06       	cpc	r15, r27
 680:	b8 f0       	brcs	.+46     	; 0x6b0 <main+0x1ac>

					Motors_Right();
 682:	0e 94 86 04 	call	0x90c	; 0x90c <Motors_Right>
					
					ultra_trigger();
 686:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 68a:	8f e5       	ldi	r24, 0x5F	; 95
 68c:	9a ee       	ldi	r25, 0xEA	; 234
 68e:	01 97       	sbiw	r24, 0x01	; 1
 690:	f1 f7       	brne	.-4      	; 0x68e <main+0x18a>
 692:	00 c0       	rjmp	.+0      	; 0x694 <main+0x190>
 694:	00 00       	nop
					Servo_90_Degree();
					_delay_ms(100);	 
					ultra_trigger();	 
					_delay_ms(15); 
					
					while (distance <= distance_left){
 696:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 69a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 69e:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <__data_end+0x2>
 6a2:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <__data_end+0x3>
 6a6:	c8 16       	cp	r12, r24
 6a8:	d9 06       	cpc	r13, r25
 6aa:	ea 06       	cpc	r14, r26
 6ac:	fb 06       	cpc	r15, r27
 6ae:	48 f7       	brcc	.-46     	; 0x682 <main+0x17e>

			}
	
	
		}
					ultra_trigger();
 6b0:	0e 94 6d 02 	call	0x4da	; 0x4da <ultra_trigger>
 6b4:	8f e5       	ldi	r24, 0x5F	; 95
 6b6:	9a ee       	ldi	r25, 0xEA	; 234
 6b8:	01 97       	sbiw	r24, 0x01	; 1
 6ba:	f1 f7       	brne	.-4      	; 0x6b8 <main+0x1b4>
 6bc:	00 c0       	rjmp	.+0      	; 0x6be <main+0x1ba>
 6be:	00 00       	nop
 6c0:	36 cf       	rjmp	.-404    	; 0x52e <main+0x2a>

000006c2 <__vector_1>:
		sensor_working = 1;
	}
}

 //External Interrupt Service Routine
ISR(INT0_vect) {
 6c2:	1f 92       	push	r1
 6c4:	0f 92       	push	r0
 6c6:	0f b6       	in	r0, 0x3f	; 63
 6c8:	0f 92       	push	r0
 6ca:	11 24       	eor	r1, r1
 6cc:	2f 93       	push	r18
 6ce:	3f 93       	push	r19
 6d0:	4f 93       	push	r20
 6d2:	5f 93       	push	r21
 6d4:	6f 93       	push	r22
 6d6:	7f 93       	push	r23
 6d8:	8f 93       	push	r24
 6da:	9f 93       	push	r25
 6dc:	af 93       	push	r26
 6de:	bf 93       	push	r27
 6e0:	ef 93       	push	r30
 6e2:	ff 93       	push	r31
	if (sensor_working == 1) {
 6e4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <sensor_working>
 6e8:	81 30       	cpi	r24, 0x01	; 1
 6ea:	09 f0       	breq	.+2      	; 0x6ee <__vector_1+0x2c>
 6ec:	60 c0       	rjmp	.+192    	; 0x7ae <__vector_1+0xec>
		if (rising_edge == 0) {
 6ee:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <rising_edge>
 6f2:	81 11       	cpse	r24, r1
 6f4:	0d c0       	rjmp	.+26     	; 0x710 <__vector_1+0x4e>
			TCNT0 = 0x00;
 6f6:	12 be       	out	0x32, r1	; 50
			rising_edge = 1;
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <rising_edge>
			timer_counter = 0;
 6fe:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <timer_counter>
 702:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <timer_counter+0x1>
 706:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timer_counter+0x2>
 70a:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <timer_counter+0x3>
 70e:	4f c0       	rjmp	.+158    	; 0x7ae <__vector_1+0xec>
			} else {	 
			distance = ((timer_counter * 256 )+ TCNT0) *0.0686;
 710:	22 b7       	in	r18, 0x32	; 50
 712:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <timer_counter>
 716:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <timer_counter+0x1>
 71a:	a0 91 6c 00 	lds	r26, 0x006C	; 0x80006c <timer_counter+0x2>
 71e:	b0 91 6d 00 	lds	r27, 0x006D	; 0x80006d <timer_counter+0x3>
 722:	ba 2f       	mov	r27, r26
 724:	a9 2f       	mov	r26, r25
 726:	98 2f       	mov	r25, r24
 728:	88 27       	eor	r24, r24
 72a:	bc 01       	movw	r22, r24
 72c:	cd 01       	movw	r24, r26
 72e:	62 0f       	add	r22, r18
 730:	71 1d       	adc	r23, r1
 732:	81 1d       	adc	r24, r1
 734:	91 1d       	adc	r25, r1
 736:	0e 94 4a 05 	call	0xa94	; 0xa94 <__floatunsisf>
 73a:	28 e2       	ldi	r18, 0x28	; 40
 73c:	3e e7       	ldi	r19, 0x7E	; 126
 73e:	4c e8       	ldi	r20, 0x8C	; 140
 740:	5d e3       	ldi	r21, 0x3D	; 61
 742:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 746:	0e 94 1b 05 	call	0xa36	; 0xa36 <__fixunssfsi>
 74a:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <__data_end>
 74e:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <__data_end+0x1>
 752:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end+0x2>
 756:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__data_end+0x3>
			LCD_goto_xy (1, 0);
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	81 e0       	ldi	r24, 0x01	; 1
 75e:	0e 94 4d 02 	call	0x49a	; 0x49a <LCD_goto_xy>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 762:	4a e0       	ldi	r20, 0x0A	; 10
 764:	60 e7       	ldi	r22, 0x70	; 112
 766:	70 e0       	ldi	r23, 0x00	; 0
 768:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end>
 76c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x1>
 770:	0e 94 45 06 	call	0xc8a	; 0xc8a <__itoa_ncheck>
			itoa(distance, distance_str, 10);
			strcat(distance_str, " cm ");
 774:	a0 e7       	ldi	r26, 0x70	; 112
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	0d 90       	ld	r0, X+
 77a:	00 20       	and	r0, r0
 77c:	e9 f7       	brne	.-6      	; 0x778 <__vector_1+0xb6>
 77e:	11 97       	sbiw	r26, 0x01	; 1
 780:	85 e0       	ldi	r24, 0x05	; 5
 782:	e0 e6       	ldi	r30, 0x60	; 96
 784:	f0 e0       	ldi	r31, 0x00	; 0
 786:	01 90       	ld	r0, Z+
 788:	0d 92       	st	X+, r0
 78a:	8a 95       	dec	r24
 78c:	e1 f7       	brne	.-8      	; 0x786 <__vector_1+0xc4>
			LCD_Write_Word(distance_str);
 78e:	80 e7       	ldi	r24, 0x70	; 112
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <LCD_Write_Word>
			timer_counter = 0;
 796:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <timer_counter>
 79a:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <timer_counter+0x1>
 79e:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timer_counter+0x2>
 7a2:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <timer_counter+0x3>
			rising_edge = 0;
 7a6:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <rising_edge>
			sensor_working=0;
 7aa:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sensor_working>
	
		}
	}
}
 7ae:	ff 91       	pop	r31
 7b0:	ef 91       	pop	r30
 7b2:	bf 91       	pop	r27
 7b4:	af 91       	pop	r26
 7b6:	9f 91       	pop	r25
 7b8:	8f 91       	pop	r24
 7ba:	7f 91       	pop	r23
 7bc:	6f 91       	pop	r22
 7be:	5f 91       	pop	r21
 7c0:	4f 91       	pop	r20
 7c2:	3f 91       	pop	r19
 7c4:	2f 91       	pop	r18
 7c6:	0f 90       	pop	r0
 7c8:	0f be       	out	0x3f, r0	; 63
 7ca:	0f 90       	pop	r0
 7cc:	1f 90       	pop	r1
 7ce:	18 95       	reti

000007d0 <__vector_11>:

 //Timer0 Overflow Interrupt Service Routine
ISR(TIMER0_OVF_vect) {
 7d0:	1f 92       	push	r1
 7d2:	0f 92       	push	r0
 7d4:	0f b6       	in	r0, 0x3f	; 63
 7d6:	0f 92       	push	r0
 7d8:	11 24       	eor	r1, r1
 7da:	8f 93       	push	r24
 7dc:	9f 93       	push	r25
 7de:	af 93       	push	r26
 7e0:	bf 93       	push	r27
	timer_counter++;
 7e2:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <timer_counter>
 7e6:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <timer_counter+0x1>
 7ea:	a0 91 6c 00 	lds	r26, 0x006C	; 0x80006c <timer_counter+0x2>
 7ee:	b0 91 6d 00 	lds	r27, 0x006D	; 0x80006d <timer_counter+0x3>
 7f2:	01 96       	adiw	r24, 0x01	; 1
 7f4:	a1 1d       	adc	r26, r1
 7f6:	b1 1d       	adc	r27, r1
 7f8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <timer_counter>
 7fc:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <timer_counter+0x1>
 800:	a0 93 6c 00 	sts	0x006C, r26	; 0x80006c <timer_counter+0x2>
 804:	b0 93 6d 00 	sts	0x006D, r27	; 0x80006d <timer_counter+0x3>
	if (timer_counter > 20) {
 808:	45 97       	sbiw	r24, 0x15	; 21
 80a:	a1 05       	cpc	r26, r1
 80c:	b1 05       	cpc	r27, r1
 80e:	68 f0       	brcs	.+26     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
		TCNT0 = 0x00;
 810:	12 be       	out	0x32, r1	; 50
		sensor_working = 0;
 812:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sensor_working>
		rising_edge = 0;
 816:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <rising_edge>
		timer_counter = 0;
 81a:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <timer_counter>
 81e:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <timer_counter+0x1>
 822:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timer_counter+0x2>
 826:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <timer_counter+0x3>
	}
}
 82a:	bf 91       	pop	r27
 82c:	af 91       	pop	r26
 82e:	9f 91       	pop	r25
 830:	8f 91       	pop	r24
 832:	0f 90       	pop	r0
 834:	0f be       	out	0x3f, r0	; 63
 836:	0f 90       	pop	r0
 838:	1f 90       	pop	r1
 83a:	18 95       	reti

0000083c <Motors_Init>:
 void Motors_Init(void)
  {
	 
	  
	 
	  DIO_voidSetPinDir(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_OUTPUT);
 83c:	41 e0       	ldi	r20, 0x01	; 1
 83e:	64 e0       	ldi	r22, 0x04	; 4
 840:	82 e0       	ldi	r24, 0x02	; 2
 842:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	  DIO_voidSetPinDir(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_OUTPUT);
 846:	41 e0       	ldi	r20, 0x01	; 1
 848:	65 e0       	ldi	r22, 0x05	; 5
 84a:	82 e0       	ldi	r24, 0x02	; 2
 84c:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	  
	   DIO_voidSetPinValue(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_HIGH);
 850:	41 e0       	ldi	r20, 0x01	; 1
 852:	64 e0       	ldi	r22, 0x04	; 4
 854:	82 e0       	ldi	r24, 0x02	; 2
 856:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_LOW);
 85a:	40 e0       	ldi	r20, 0x00	; 0
 85c:	65 e0       	ldi	r22, 0x05	; 5
 85e:	82 e0       	ldi	r24, 0x02	; 2
 860:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  /*---------------------------------------------------------------------*/
	  DIO_voidSetPinDir(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_OUTPUT);
 864:	41 e0       	ldi	r20, 0x01	; 1
 866:	62 e0       	ldi	r22, 0x02	; 2
 868:	82 e0       	ldi	r24, 0x02	; 2
 86a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	  DIO_voidSetPinDir(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_OUTPUT);
 86e:	41 e0       	ldi	r20, 0x01	; 1
 870:	63 e0       	ldi	r22, 0x03	; 3
 872:	82 e0       	ldi	r24, 0x02	; 2
 874:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	  
	   DIO_voidSetPinValue(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_HIGH);
 878:	41 e0       	ldi	r20, 0x01	; 1
 87a:	62 e0       	ldi	r22, 0x02	; 2
 87c:	82 e0       	ldi	r24, 0x02	; 2
 87e:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_LOW);
 882:	40 e0       	ldi	r20, 0x00	; 0
 884:	63 e0       	ldi	r22, 0x03	; 3
 886:	82 e0       	ldi	r24, 0x02	; 2
 888:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 88c:	08 95       	ret

0000088e <Motors_Stop>:
  
  
  
  void Motors_Stop ()
  {
	  DIO_voidSetPinValue(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_LOW);
 88e:	40 e0       	ldi	r20, 0x00	; 0
 890:	64 e0       	ldi	r22, 0x04	; 4
 892:	82 e0       	ldi	r24, 0x02	; 2
 894:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  DIO_voidSetPinValue(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_LOW);
 898:	40 e0       	ldi	r20, 0x00	; 0
 89a:	65 e0       	ldi	r22, 0x05	; 5
 89c:	82 e0       	ldi	r24, 0x02	; 2
 89e:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  
	  
	 DIO_voidSetPinValue(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_LOW);
 8a2:	40 e0       	ldi	r20, 0x00	; 0
 8a4:	62 e0       	ldi	r22, 0x02	; 2
 8a6:	82 e0       	ldi	r24, 0x02	; 2
 8a8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	 DIO_voidSetPinValue(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_LOW);
 8ac:	40 e0       	ldi	r20, 0x00	; 0
 8ae:	63 e0       	ldi	r22, 0x03	; 3
 8b0:	82 e0       	ldi	r24, 0x02	; 2
 8b2:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 8b6:	08 95       	ret

000008b8 <Motors_TOP_Speed>:

  
  void Motors_TOP_Speed()
  {
	  
	   DIO_voidSetPinValue(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_HIGH);
 8b8:	41 e0       	ldi	r20, 0x01	; 1
 8ba:	64 e0       	ldi	r22, 0x04	; 4
 8bc:	82 e0       	ldi	r24, 0x02	; 2
 8be:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_LOW);
 8c2:	40 e0       	ldi	r20, 0x00	; 0
 8c4:	65 e0       	ldi	r22, 0x05	; 5
 8c6:	82 e0       	ldi	r24, 0x02	; 2
 8c8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  
	  
	  DIO_voidSetPinValue(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_HIGH);
 8cc:	41 e0       	ldi	r20, 0x01	; 1
 8ce:	62 e0       	ldi	r22, 0x02	; 2
 8d0:	82 e0       	ldi	r24, 0x02	; 2
 8d2:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  DIO_voidSetPinValue(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_LOW);
 8d6:	40 e0       	ldi	r20, 0x00	; 0
 8d8:	63 e0       	ldi	r22, 0x03	; 3
 8da:	82 e0       	ldi	r24, 0x02	; 2
 8dc:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 8e0:	08 95       	ret

000008e2 <Motors_Left>:
  

  
  void Motors_Left()
  {
	   DIO_voidSetPinValue(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_LOW);
 8e2:	40 e0       	ldi	r20, 0x00	; 0
 8e4:	64 e0       	ldi	r22, 0x04	; 4
 8e6:	82 e0       	ldi	r24, 0x02	; 2
 8e8:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_LOW);
 8ec:	40 e0       	ldi	r20, 0x00	; 0
 8ee:	65 e0       	ldi	r22, 0x05	; 5
 8f0:	82 e0       	ldi	r24, 0x02	; 2
 8f2:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   
	   DIO_voidSetPinValue(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_HIGH);
 8f6:	41 e0       	ldi	r20, 0x01	; 1
 8f8:	62 e0       	ldi	r22, 0x02	; 2
 8fa:	82 e0       	ldi	r24, 0x02	; 2
 8fc:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	   DIO_voidSetPinValue(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_LOW); 
 900:	40 e0       	ldi	r20, 0x00	; 0
 902:	63 e0       	ldi	r22, 0x03	; 3
 904:	82 e0       	ldi	r24, 0x02	; 2
 906:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 90a:	08 95       	ret

0000090c <Motors_Right>:
  
  
  void Motors_Right()
  {
	  
	  DIO_voidSetPinValue(Motor1_INT1_Port , Motor1_INT1_pin , DIO_U8_HIGH);
 90c:	41 e0       	ldi	r20, 0x01	; 1
 90e:	64 e0       	ldi	r22, 0x04	; 4
 910:	82 e0       	ldi	r24, 0x02	; 2
 912:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  DIO_voidSetPinValue(Motor1_INT2_Port , Motor1_INT2_pin , DIO_U8_LOW);
 916:	40 e0       	ldi	r20, 0x00	; 0
 918:	65 e0       	ldi	r22, 0x05	; 5
 91a:	82 e0       	ldi	r24, 0x02	; 2
 91c:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	  
	  
	  
	 DIO_voidSetPinValue(Motor2_INT3_Port , Motor2_INT3_pin , DIO_U8_LOW);
 920:	40 e0       	ldi	r20, 0x00	; 0
 922:	62 e0       	ldi	r22, 0x02	; 2
 924:	82 e0       	ldi	r24, 0x02	; 2
 926:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
	 DIO_voidSetPinValue(Motor2_INT4_Port , Motor2_INT4_pin , DIO_U8_LOW);
 92a:	40 e0       	ldi	r20, 0x00	; 0
 92c:	63 e0       	ldi	r22, 0x03	; 3
 92e:	82 e0       	ldi	r24, 0x02	; 2
 930:	0e 94 bd 00 	call	0x17a	; 0x17a <DIO_voidSetPinValue>
 934:	08 95       	ret

00000936 <Servo_0_Degree>:



void Servo_0_Degree()
{
	OCR1A=	249;
 936:	89 ef       	ldi	r24, 0xF9	; 249
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	9b bd       	out	0x2b, r25	; 43
 93c:	8a bd       	out	0x2a, r24	; 42
 93e:	08 95       	ret

00000940 <Servo_90_Degree>:



void Servo_90_Degree()
{
	OCR1A=374;
 940:	86 e7       	ldi	r24, 0x76	; 118
 942:	91 e0       	ldi	r25, 0x01	; 1
 944:	9b bd       	out	0x2b, r25	; 43
 946:	8a bd       	out	0x2a, r24	; 42
 948:	08 95       	ret

0000094a <Servo_180_Degree>:



void Servo_180_Degree()
{
	OCR1A=499;
 94a:	83 ef       	ldi	r24, 0xF3	; 243
 94c:	91 e0       	ldi	r25, 0x01	; 1
 94e:	9b bd       	out	0x2b, r25	; 43
 950:	8a bd       	out	0x2a, r24	; 42
 952:	08 95       	ret

00000954 <Servo_init>:
}


void Servo_init()
{
	DIO_voidSetPinDir(Servo_Control_Port,Servo_Control_Pin,DIO_U8_OUTPUT);
 954:	41 e0       	ldi	r20, 0x01	; 1
 956:	65 e0       	ldi	r22, 0x05	; 5
 958:	83 e0       	ldi	r24, 0x03	; 3
 95a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	TIMER1_void_Init();
 95e:	0e 94 de 04 	call	0x9bc	; 0x9bc <TIMER1_void_Init>



void Servo_90_Degree()
{
	OCR1A=374;
 962:	86 e7       	ldi	r24, 0x76	; 118
 964:	91 e0       	ldi	r25, 0x01	; 1
 966:	9b bd       	out	0x2b, r25	; 43
 968:	8a bd       	out	0x2a, r24	; 42
 96a:	08 95       	ret

0000096c <TIMER0_void_Init>:
 96c:	83 b7       	in	r24, 0x33	; 51
 96e:	8f 7b       	andi	r24, 0xBF	; 191
 970:	83 bf       	out	0x33, r24	; 51
 972:	83 b7       	in	r24, 0x33	; 51
 974:	87 7f       	andi	r24, 0xF7	; 247
 976:	83 bf       	out	0x33, r24	; 51
 978:	83 b7       	in	r24, 0x33	; 51
 97a:	81 60       	ori	r24, 0x01	; 1
 97c:	83 bf       	out	0x33, r24	; 51
 97e:	83 b7       	in	r24, 0x33	; 51
 980:	82 60       	ori	r24, 0x02	; 2
 982:	83 bf       	out	0x33, r24	; 51
 984:	83 b7       	in	r24, 0x33	; 51
 986:	8b 7f       	andi	r24, 0xFB	; 251
 988:	83 bf       	out	0x33, r24	; 51
 98a:	83 b7       	in	r24, 0x33	; 51
 98c:	8f 7e       	andi	r24, 0xEF	; 239
 98e:	83 bf       	out	0x33, r24	; 51
 990:	83 b7       	in	r24, 0x33	; 51
 992:	8f 7d       	andi	r24, 0xDF	; 223
 994:	83 bf       	out	0x33, r24	; 51
 996:	89 b7       	in	r24, 0x39	; 57
 998:	8e 7f       	andi	r24, 0xFE	; 254
 99a:	89 bf       	out	0x39, r24	; 57
 99c:	89 b7       	in	r24, 0x39	; 57
 99e:	8d 7f       	andi	r24, 0xFD	; 253
 9a0:	89 bf       	out	0x39, r24	; 57
 9a2:	88 b7       	in	r24, 0x38	; 56
 9a4:	81 60       	ori	r24, 0x01	; 1
 9a6:	88 bf       	out	0x38, r24	; 56
 9a8:	88 b7       	in	r24, 0x38	; 56
 9aa:	82 60       	ori	r24, 0x02	; 2
 9ac:	88 bf       	out	0x38, r24	; 56
 9ae:	12 be       	out	0x32, r1	; 50
 9b0:	1c be       	out	0x3c, r1	; 60
 9b2:	08 95       	ret

000009b4 <TIMER0_void_EnableOVInt>:
 9b4:	89 b7       	in	r24, 0x39	; 57
 9b6:	81 60       	ori	r24, 0x01	; 1
 9b8:	89 bf       	out	0x39, r24	; 57
 9ba:	08 95       	ret

000009bc <TIMER1_void_Init>:
		CLEAR_BIT(TCCR1A,1);
		SET_BIT(TCCR1B,3);
		CLEAR_BIT(TCCR1B,4);
		
	#elif(TIMER1_MODE == TIMER1_FAST_PWM_ICR)
		CLEAR_BIT(TCCR1A,0);
 9bc:	8f b5       	in	r24, 0x2f	; 47
 9be:	8e 7f       	andi	r24, 0xFE	; 254
 9c0:	8f bd       	out	0x2f, r24	; 47
		SET_BIT(TCCR1A,1);
 9c2:	8f b5       	in	r24, 0x2f	; 47
 9c4:	82 60       	ori	r24, 0x02	; 2
 9c6:	8f bd       	out	0x2f, r24	; 47
		SET_BIT(TCCR1B,3);
 9c8:	8e b5       	in	r24, 0x2e	; 46
 9ca:	88 60       	ori	r24, 0x08	; 8
 9cc:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TCCR1B,4);
 9ce:	8e b5       	in	r24, 0x2e	; 46
 9d0:	80 61       	ori	r24, 0x10	; 16
 9d2:	8e bd       	out	0x2e, r24	; 46
		
	#endif
	
	
	#if(TIMER1_PRESCALER == TIMER1_DIV_BY_64)
		SET_BIT(TCCR1B,0);
 9d4:	8e b5       	in	r24, 0x2e	; 46
 9d6:	81 60       	ori	r24, 0x01	; 1
 9d8:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TCCR1B,1);
 9da:	8e b5       	in	r24, 0x2e	; 46
 9dc:	82 60       	ori	r24, 0x02	; 2
 9de:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TCCR1B,2);
 9e0:	8e b5       	in	r24, 0x2e	; 46
 9e2:	8b 7f       	andi	r24, 0xFB	; 251
 9e4:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TCCR1A,7);
		SET_BIT(TCCR1A,5);
		SET_BIT(TCCR1A,6);
		SET_BIT(TCCR1A,4);
	#elif(TIMER1_COM_EVENT == TIMER1_INVERTED )
		SET_BIT(TCCR1A,7);
 9e6:	8f b5       	in	r24, 0x2f	; 47
 9e8:	80 68       	ori	r24, 0x80	; 128
 9ea:	8f bd       	out	0x2f, r24	; 47
		SET_BIT(TCCR1A,5);
 9ec:	8f b5       	in	r24, 0x2f	; 47
 9ee:	80 62       	ori	r24, 0x20	; 32
 9f0:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TCCR1A,6);
 9f2:	8f b5       	in	r24, 0x2f	; 47
 9f4:	8f 7b       	andi	r24, 0xBF	; 191
 9f6:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TCCR1A,4);
 9f8:	8f b5       	in	r24, 0x2f	; 47
 9fa:	8f 7e       	andi	r24, 0xEF	; 239
 9fc:	8f bd       	out	0x2f, r24	; 47
	#endif
	
	TCNT1 =0 ;
 9fe:	1d bc       	out	0x2d, r1	; 45
 a00:	1c bc       	out	0x2c, r1	; 44
	OCR1A = 0;
 a02:	1b bc       	out	0x2b, r1	; 43
 a04:	1a bc       	out	0x2a, r1	; 42
	 ICR1 = 4999;
 a06:	87 e8       	ldi	r24, 0x87	; 135
 a08:	93 e1       	ldi	r25, 0x13	; 19
 a0a:	97 bd       	out	0x27, r25	; 39
 a0c:	86 bd       	out	0x26, r24	; 38
 a0e:	08 95       	ret

00000a10 <ultrasonic_init>:




void ultrasonic_init(void) {
	EXTI0_voidInit();
 a10:	0e 94 4d 01 	call	0x29a	; 0x29a <EXTI0_voidInit>
	EXTI0_voidEnable();
 a14:	0e 94 41 01 	call	0x282	; 0x282 <EXTI0_voidEnable>
	DIO_voidSetPinDir(Trigger_port, Trigger_pin, DIO_U8_OUTPUT);
 a18:	41 e0       	ldi	r20, 0x01	; 1
 a1a:	60 e0       	ldi	r22, 0x00	; 0
 a1c:	83 e0       	ldi	r24, 0x03	; 3
 a1e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(echo_port, echo_pin, DIO_U8_INPUT);
 a22:	40 e0       	ldi	r20, 0x00	; 0
 a24:	62 e0       	ldi	r22, 0x02	; 2
 a26:	83 e0       	ldi	r24, 0x03	; 3
 a28:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDir>
	//DIO_voidSetPinValue(echo_port, echo_pin, DIO_U8_HIGH);
	TIMER0_void_Init();
 a2c:	0e 94 b6 04 	call	0x96c	; 0x96c <TIMER0_void_Init>
	TIMER0_void_EnableOVInt();
 a30:	0e 94 da 04 	call	0x9b4	; 0x9b4 <TIMER0_void_EnableOVInt>
 a34:	08 95       	ret

00000a36 <__fixunssfsi>:
 a36:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_splitA>
 a3a:	88 f0       	brcs	.+34     	; 0xa5e <__fixunssfsi+0x28>
 a3c:	9f 57       	subi	r25, 0x7F	; 127
 a3e:	98 f0       	brcs	.+38     	; 0xa66 <__fixunssfsi+0x30>
 a40:	b9 2f       	mov	r27, r25
 a42:	99 27       	eor	r25, r25
 a44:	b7 51       	subi	r27, 0x17	; 23
 a46:	b0 f0       	brcs	.+44     	; 0xa74 <__fixunssfsi+0x3e>
 a48:	e1 f0       	breq	.+56     	; 0xa82 <__fixunssfsi+0x4c>
 a4a:	66 0f       	add	r22, r22
 a4c:	77 1f       	adc	r23, r23
 a4e:	88 1f       	adc	r24, r24
 a50:	99 1f       	adc	r25, r25
 a52:	1a f0       	brmi	.+6      	; 0xa5a <__fixunssfsi+0x24>
 a54:	ba 95       	dec	r27
 a56:	c9 f7       	brne	.-14     	; 0xa4a <__fixunssfsi+0x14>
 a58:	14 c0       	rjmp	.+40     	; 0xa82 <__fixunssfsi+0x4c>
 a5a:	b1 30       	cpi	r27, 0x01	; 1
 a5c:	91 f0       	breq	.+36     	; 0xa82 <__fixunssfsi+0x4c>
 a5e:	0e 94 a9 05 	call	0xb52	; 0xb52 <__fp_zero>
 a62:	b1 e0       	ldi	r27, 0x01	; 1
 a64:	08 95       	ret
 a66:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_zero>
 a6a:	67 2f       	mov	r22, r23
 a6c:	78 2f       	mov	r23, r24
 a6e:	88 27       	eor	r24, r24
 a70:	b8 5f       	subi	r27, 0xF8	; 248
 a72:	39 f0       	breq	.+14     	; 0xa82 <__fixunssfsi+0x4c>
 a74:	b9 3f       	cpi	r27, 0xF9	; 249
 a76:	cc f3       	brlt	.-14     	; 0xa6a <__fixunssfsi+0x34>
 a78:	86 95       	lsr	r24
 a7a:	77 95       	ror	r23
 a7c:	67 95       	ror	r22
 a7e:	b3 95       	inc	r27
 a80:	d9 f7       	brne	.-10     	; 0xa78 <__fixunssfsi+0x42>
 a82:	3e f4       	brtc	.+14     	; 0xa92 <__fixunssfsi+0x5c>
 a84:	90 95       	com	r25
 a86:	80 95       	com	r24
 a88:	70 95       	com	r23
 a8a:	61 95       	neg	r22
 a8c:	7f 4f       	sbci	r23, 0xFF	; 255
 a8e:	8f 4f       	sbci	r24, 0xFF	; 255
 a90:	9f 4f       	sbci	r25, 0xFF	; 255
 a92:	08 95       	ret

00000a94 <__floatunsisf>:
 a94:	e8 94       	clt
 a96:	09 c0       	rjmp	.+18     	; 0xaaa <__floatsisf+0x12>

00000a98 <__floatsisf>:
 a98:	97 fb       	bst	r25, 7
 a9a:	3e f4       	brtc	.+14     	; 0xaaa <__floatsisf+0x12>
 a9c:	90 95       	com	r25
 a9e:	80 95       	com	r24
 aa0:	70 95       	com	r23
 aa2:	61 95       	neg	r22
 aa4:	7f 4f       	sbci	r23, 0xFF	; 255
 aa6:	8f 4f       	sbci	r24, 0xFF	; 255
 aa8:	9f 4f       	sbci	r25, 0xFF	; 255
 aaa:	99 23       	and	r25, r25
 aac:	a9 f0       	breq	.+42     	; 0xad8 <__floatsisf+0x40>
 aae:	f9 2f       	mov	r31, r25
 ab0:	96 e9       	ldi	r25, 0x96	; 150
 ab2:	bb 27       	eor	r27, r27
 ab4:	93 95       	inc	r25
 ab6:	f6 95       	lsr	r31
 ab8:	87 95       	ror	r24
 aba:	77 95       	ror	r23
 abc:	67 95       	ror	r22
 abe:	b7 95       	ror	r27
 ac0:	f1 11       	cpse	r31, r1
 ac2:	f8 cf       	rjmp	.-16     	; 0xab4 <__floatsisf+0x1c>
 ac4:	fa f4       	brpl	.+62     	; 0xb04 <__floatsisf+0x6c>
 ac6:	bb 0f       	add	r27, r27
 ac8:	11 f4       	brne	.+4      	; 0xace <__floatsisf+0x36>
 aca:	60 ff       	sbrs	r22, 0
 acc:	1b c0       	rjmp	.+54     	; 0xb04 <__floatsisf+0x6c>
 ace:	6f 5f       	subi	r22, 0xFF	; 255
 ad0:	7f 4f       	sbci	r23, 0xFF	; 255
 ad2:	8f 4f       	sbci	r24, 0xFF	; 255
 ad4:	9f 4f       	sbci	r25, 0xFF	; 255
 ad6:	16 c0       	rjmp	.+44     	; 0xb04 <__floatsisf+0x6c>
 ad8:	88 23       	and	r24, r24
 ada:	11 f0       	breq	.+4      	; 0xae0 <__floatsisf+0x48>
 adc:	96 e9       	ldi	r25, 0x96	; 150
 ade:	11 c0       	rjmp	.+34     	; 0xb02 <__floatsisf+0x6a>
 ae0:	77 23       	and	r23, r23
 ae2:	21 f0       	breq	.+8      	; 0xaec <__floatsisf+0x54>
 ae4:	9e e8       	ldi	r25, 0x8E	; 142
 ae6:	87 2f       	mov	r24, r23
 ae8:	76 2f       	mov	r23, r22
 aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__floatsisf+0x5e>
 aec:	66 23       	and	r22, r22
 aee:	71 f0       	breq	.+28     	; 0xb0c <__floatsisf+0x74>
 af0:	96 e8       	ldi	r25, 0x86	; 134
 af2:	86 2f       	mov	r24, r22
 af4:	70 e0       	ldi	r23, 0x00	; 0
 af6:	60 e0       	ldi	r22, 0x00	; 0
 af8:	2a f0       	brmi	.+10     	; 0xb04 <__floatsisf+0x6c>
 afa:	9a 95       	dec	r25
 afc:	66 0f       	add	r22, r22
 afe:	77 1f       	adc	r23, r23
 b00:	88 1f       	adc	r24, r24
 b02:	da f7       	brpl	.-10     	; 0xafa <__floatsisf+0x62>
 b04:	88 0f       	add	r24, r24
 b06:	96 95       	lsr	r25
 b08:	87 95       	ror	r24
 b0a:	97 f9       	bld	r25, 7
 b0c:	08 95       	ret

00000b0e <__fp_split3>:
 b0e:	57 fd       	sbrc	r21, 7
 b10:	90 58       	subi	r25, 0x80	; 128
 b12:	44 0f       	add	r20, r20
 b14:	55 1f       	adc	r21, r21
 b16:	59 f0       	breq	.+22     	; 0xb2e <__fp_splitA+0x10>
 b18:	5f 3f       	cpi	r21, 0xFF	; 255
 b1a:	71 f0       	breq	.+28     	; 0xb38 <__fp_splitA+0x1a>
 b1c:	47 95       	ror	r20

00000b1e <__fp_splitA>:
 b1e:	88 0f       	add	r24, r24
 b20:	97 fb       	bst	r25, 7
 b22:	99 1f       	adc	r25, r25
 b24:	61 f0       	breq	.+24     	; 0xb3e <__fp_splitA+0x20>
 b26:	9f 3f       	cpi	r25, 0xFF	; 255
 b28:	79 f0       	breq	.+30     	; 0xb48 <__fp_splitA+0x2a>
 b2a:	87 95       	ror	r24
 b2c:	08 95       	ret
 b2e:	12 16       	cp	r1, r18
 b30:	13 06       	cpc	r1, r19
 b32:	14 06       	cpc	r1, r20
 b34:	55 1f       	adc	r21, r21
 b36:	f2 cf       	rjmp	.-28     	; 0xb1c <__fp_split3+0xe>
 b38:	46 95       	lsr	r20
 b3a:	f1 df       	rcall	.-30     	; 0xb1e <__fp_splitA>
 b3c:	08 c0       	rjmp	.+16     	; 0xb4e <__fp_splitA+0x30>
 b3e:	16 16       	cp	r1, r22
 b40:	17 06       	cpc	r1, r23
 b42:	18 06       	cpc	r1, r24
 b44:	99 1f       	adc	r25, r25
 b46:	f1 cf       	rjmp	.-30     	; 0xb2a <__fp_splitA+0xc>
 b48:	86 95       	lsr	r24
 b4a:	71 05       	cpc	r23, r1
 b4c:	61 05       	cpc	r22, r1
 b4e:	08 94       	sec
 b50:	08 95       	ret

00000b52 <__fp_zero>:
 b52:	e8 94       	clt

00000b54 <__fp_szero>:
 b54:	bb 27       	eor	r27, r27
 b56:	66 27       	eor	r22, r22
 b58:	77 27       	eor	r23, r23
 b5a:	cb 01       	movw	r24, r22
 b5c:	97 f9       	bld	r25, 7
 b5e:	08 95       	ret

00000b60 <__mulsf3>:
 b60:	0e 94 c3 05 	call	0xb86	; 0xb86 <__mulsf3x>
 b64:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_round>
 b68:	0e 94 26 06 	call	0xc4c	; 0xc4c <__fp_pscA>
 b6c:	38 f0       	brcs	.+14     	; 0xb7c <__mulsf3+0x1c>
 b6e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fp_pscB>
 b72:	20 f0       	brcs	.+8      	; 0xb7c <__mulsf3+0x1c>
 b74:	95 23       	and	r25, r21
 b76:	11 f0       	breq	.+4      	; 0xb7c <__mulsf3+0x1c>
 b78:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__fp_inf>
 b7c:	0c 94 23 06 	jmp	0xc46	; 0xc46 <__fp_nan>
 b80:	11 24       	eor	r1, r1
 b82:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__fp_szero>

00000b86 <__mulsf3x>:
 b86:	0e 94 87 05 	call	0xb0e	; 0xb0e <__fp_split3>
 b8a:	70 f3       	brcs	.-36     	; 0xb68 <__mulsf3+0x8>

00000b8c <__mulsf3_pse>:
 b8c:	95 9f       	mul	r25, r21
 b8e:	c1 f3       	breq	.-16     	; 0xb80 <__mulsf3+0x20>
 b90:	95 0f       	add	r25, r21
 b92:	50 e0       	ldi	r21, 0x00	; 0
 b94:	55 1f       	adc	r21, r21
 b96:	62 9f       	mul	r22, r18
 b98:	f0 01       	movw	r30, r0
 b9a:	72 9f       	mul	r23, r18
 b9c:	bb 27       	eor	r27, r27
 b9e:	f0 0d       	add	r31, r0
 ba0:	b1 1d       	adc	r27, r1
 ba2:	63 9f       	mul	r22, r19
 ba4:	aa 27       	eor	r26, r26
 ba6:	f0 0d       	add	r31, r0
 ba8:	b1 1d       	adc	r27, r1
 baa:	aa 1f       	adc	r26, r26
 bac:	64 9f       	mul	r22, r20
 bae:	66 27       	eor	r22, r22
 bb0:	b0 0d       	add	r27, r0
 bb2:	a1 1d       	adc	r26, r1
 bb4:	66 1f       	adc	r22, r22
 bb6:	82 9f       	mul	r24, r18
 bb8:	22 27       	eor	r18, r18
 bba:	b0 0d       	add	r27, r0
 bbc:	a1 1d       	adc	r26, r1
 bbe:	62 1f       	adc	r22, r18
 bc0:	73 9f       	mul	r23, r19
 bc2:	b0 0d       	add	r27, r0
 bc4:	a1 1d       	adc	r26, r1
 bc6:	62 1f       	adc	r22, r18
 bc8:	83 9f       	mul	r24, r19
 bca:	a0 0d       	add	r26, r0
 bcc:	61 1d       	adc	r22, r1
 bce:	22 1f       	adc	r18, r18
 bd0:	74 9f       	mul	r23, r20
 bd2:	33 27       	eor	r19, r19
 bd4:	a0 0d       	add	r26, r0
 bd6:	61 1d       	adc	r22, r1
 bd8:	23 1f       	adc	r18, r19
 bda:	84 9f       	mul	r24, r20
 bdc:	60 0d       	add	r22, r0
 bde:	21 1d       	adc	r18, r1
 be0:	82 2f       	mov	r24, r18
 be2:	76 2f       	mov	r23, r22
 be4:	6a 2f       	mov	r22, r26
 be6:	11 24       	eor	r1, r1
 be8:	9f 57       	subi	r25, 0x7F	; 127
 bea:	50 40       	sbci	r21, 0x00	; 0
 bec:	9a f0       	brmi	.+38     	; 0xc14 <__mulsf3_pse+0x88>
 bee:	f1 f0       	breq	.+60     	; 0xc2c <__mulsf3_pse+0xa0>
 bf0:	88 23       	and	r24, r24
 bf2:	4a f0       	brmi	.+18     	; 0xc06 <__mulsf3_pse+0x7a>
 bf4:	ee 0f       	add	r30, r30
 bf6:	ff 1f       	adc	r31, r31
 bf8:	bb 1f       	adc	r27, r27
 bfa:	66 1f       	adc	r22, r22
 bfc:	77 1f       	adc	r23, r23
 bfe:	88 1f       	adc	r24, r24
 c00:	91 50       	subi	r25, 0x01	; 1
 c02:	50 40       	sbci	r21, 0x00	; 0
 c04:	a9 f7       	brne	.-22     	; 0xbf0 <__mulsf3_pse+0x64>
 c06:	9e 3f       	cpi	r25, 0xFE	; 254
 c08:	51 05       	cpc	r21, r1
 c0a:	80 f0       	brcs	.+32     	; 0xc2c <__mulsf3_pse+0xa0>
 c0c:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__fp_inf>
 c10:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__fp_szero>
 c14:	5f 3f       	cpi	r21, 0xFF	; 255
 c16:	e4 f3       	brlt	.-8      	; 0xc10 <__mulsf3_pse+0x84>
 c18:	98 3e       	cpi	r25, 0xE8	; 232
 c1a:	d4 f3       	brlt	.-12     	; 0xc10 <__mulsf3_pse+0x84>
 c1c:	86 95       	lsr	r24
 c1e:	77 95       	ror	r23
 c20:	67 95       	ror	r22
 c22:	b7 95       	ror	r27
 c24:	f7 95       	ror	r31
 c26:	e7 95       	ror	r30
 c28:	9f 5f       	subi	r25, 0xFF	; 255
 c2a:	c1 f7       	brne	.-16     	; 0xc1c <__mulsf3_pse+0x90>
 c2c:	fe 2b       	or	r31, r30
 c2e:	88 0f       	add	r24, r24
 c30:	91 1d       	adc	r25, r1
 c32:	96 95       	lsr	r25
 c34:	87 95       	ror	r24
 c36:	97 f9       	bld	r25, 7
 c38:	08 95       	ret

00000c3a <__fp_inf>:
 c3a:	97 f9       	bld	r25, 7
 c3c:	9f 67       	ori	r25, 0x7F	; 127
 c3e:	80 e8       	ldi	r24, 0x80	; 128
 c40:	70 e0       	ldi	r23, 0x00	; 0
 c42:	60 e0       	ldi	r22, 0x00	; 0
 c44:	08 95       	ret

00000c46 <__fp_nan>:
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	80 ec       	ldi	r24, 0xC0	; 192
 c4a:	08 95       	ret

00000c4c <__fp_pscA>:
 c4c:	00 24       	eor	r0, r0
 c4e:	0a 94       	dec	r0
 c50:	16 16       	cp	r1, r22
 c52:	17 06       	cpc	r1, r23
 c54:	18 06       	cpc	r1, r24
 c56:	09 06       	cpc	r0, r25
 c58:	08 95       	ret

00000c5a <__fp_pscB>:
 c5a:	00 24       	eor	r0, r0
 c5c:	0a 94       	dec	r0
 c5e:	12 16       	cp	r1, r18
 c60:	13 06       	cpc	r1, r19
 c62:	14 06       	cpc	r1, r20
 c64:	05 06       	cpc	r0, r21
 c66:	08 95       	ret

00000c68 <__fp_round>:
 c68:	09 2e       	mov	r0, r25
 c6a:	03 94       	inc	r0
 c6c:	00 0c       	add	r0, r0
 c6e:	11 f4       	brne	.+4      	; 0xc74 <__fp_round+0xc>
 c70:	88 23       	and	r24, r24
 c72:	52 f0       	brmi	.+20     	; 0xc88 <__fp_round+0x20>
 c74:	bb 0f       	add	r27, r27
 c76:	40 f4       	brcc	.+16     	; 0xc88 <__fp_round+0x20>
 c78:	bf 2b       	or	r27, r31
 c7a:	11 f4       	brne	.+4      	; 0xc80 <__fp_round+0x18>
 c7c:	60 ff       	sbrs	r22, 0
 c7e:	04 c0       	rjmp	.+8      	; 0xc88 <__fp_round+0x20>
 c80:	6f 5f       	subi	r22, 0xFF	; 255
 c82:	7f 4f       	sbci	r23, 0xFF	; 255
 c84:	8f 4f       	sbci	r24, 0xFF	; 255
 c86:	9f 4f       	sbci	r25, 0xFF	; 255
 c88:	08 95       	ret

00000c8a <__itoa_ncheck>:
 c8a:	bb 27       	eor	r27, r27
 c8c:	4a 30       	cpi	r20, 0x0A	; 10
 c8e:	31 f4       	brne	.+12     	; 0xc9c <__itoa_ncheck+0x12>
 c90:	99 23       	and	r25, r25
 c92:	22 f4       	brpl	.+8      	; 0xc9c <__itoa_ncheck+0x12>
 c94:	bd e2       	ldi	r27, 0x2D	; 45
 c96:	90 95       	com	r25
 c98:	81 95       	neg	r24
 c9a:	9f 4f       	sbci	r25, 0xFF	; 255
 c9c:	0c 94 51 06 	jmp	0xca2	; 0xca2 <__utoa_common>

00000ca0 <__utoa_ncheck>:
 ca0:	bb 27       	eor	r27, r27

00000ca2 <__utoa_common>:
 ca2:	fb 01       	movw	r30, r22
 ca4:	55 27       	eor	r21, r21
 ca6:	aa 27       	eor	r26, r26
 ca8:	88 0f       	add	r24, r24
 caa:	99 1f       	adc	r25, r25
 cac:	aa 1f       	adc	r26, r26
 cae:	a4 17       	cp	r26, r20
 cb0:	10 f0       	brcs	.+4      	; 0xcb6 <__utoa_common+0x14>
 cb2:	a4 1b       	sub	r26, r20
 cb4:	83 95       	inc	r24
 cb6:	50 51       	subi	r21, 0x10	; 16
 cb8:	b9 f7       	brne	.-18     	; 0xca8 <__utoa_common+0x6>
 cba:	a0 5d       	subi	r26, 0xD0	; 208
 cbc:	aa 33       	cpi	r26, 0x3A	; 58
 cbe:	08 f0       	brcs	.+2      	; 0xcc2 <__utoa_common+0x20>
 cc0:	a9 5d       	subi	r26, 0xD9	; 217
 cc2:	a1 93       	st	Z+, r26
 cc4:	00 97       	sbiw	r24, 0x00	; 0
 cc6:	79 f7       	brne	.-34     	; 0xca6 <__utoa_common+0x4>
 cc8:	b1 11       	cpse	r27, r1
 cca:	b1 93       	st	Z+, r27
 ccc:	11 92       	st	Z+, r1
 cce:	cb 01       	movw	r24, r22
 cd0:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <strrev>

00000cd4 <strrev>:
 cd4:	dc 01       	movw	r26, r24
 cd6:	fc 01       	movw	r30, r24
 cd8:	67 2f       	mov	r22, r23
 cda:	71 91       	ld	r23, Z+
 cdc:	77 23       	and	r23, r23
 cde:	e1 f7       	brne	.-8      	; 0xcd8 <strrev+0x4>
 ce0:	32 97       	sbiw	r30, 0x02	; 2
 ce2:	04 c0       	rjmp	.+8      	; 0xcec <strrev+0x18>
 ce4:	7c 91       	ld	r23, X
 ce6:	6d 93       	st	X+, r22
 ce8:	70 83       	st	Z, r23
 cea:	62 91       	ld	r22, -Z
 cec:	ae 17       	cp	r26, r30
 cee:	bf 07       	cpc	r27, r31
 cf0:	c8 f3       	brcs	.-14     	; 0xce4 <strrev+0x10>
 cf2:	08 95       	ret

00000cf4 <_exit>:
 cf4:	f8 94       	cli

00000cf6 <__stop_program>:
 cf6:	ff cf       	rjmp	.-2      	; 0xcf6 <__stop_program>
